{
  "hash": "717c43c9f83ec105224490dd058d7869",
  "result": {
    "markdown": "---\ntitle: \"Men's 100m Dash Over 100 Years\"\nauthor: \"Rochelle Rafn\"\nformat:\n  html: \n    code-fold: true\n    code-summary: \"Show Code\"\n---\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmens_100m_change1 <- read_xlsx(\"/Users/rochellerafn/RStudio_Files/mens_100m_min.xlsx\", sheet = 2, col_names = c(\"Year\", \"minTime\", \"Change\"))\n\nmens_100m_change1 <- mens_100m_change1 %>%\n  filter(!is.na(Change)) %>%\n  transform(Change = as.numeric(Change))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in eval(substitute(list(...)), `_data`, parent.frame()): NAs introduced\nby coercion\n```\n:::\n\n```{.r .cell-code}\nmens_100m_change1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Year            minTime      Change\n1  Year            minTime          NA\n2  1912               10.6  0.00000000\n3  1920               10.8  1.88679245\n4  1924               10.6 -1.85185185\n5  1928               10.6  0.00000000\n6  1932              10.38 -2.07547170\n7  1936 10.199999999999999 -1.73410405\n8  1948               10.3  0.98039216\n9  1952              10.65  3.39805825\n10 1956              10.52 -1.22065728\n11 1960 10.199999999999999 -3.04182510\n12 1964                9.9 -2.94117647\n13 1968                9.9  0.00000000\n14 1972              10.07  1.71717172\n15 1976              10.06 -0.09930487\n16 1980              10.11  0.49701789\n17 1984               9.99 -1.18694362\n18 1988 9.7899999999999991 -2.00200200\n19 1992 9.9600000000000009  1.73646578\n20 1996               9.84 -1.20481928\n21 2000 9.8699999999999992  0.30487805\n22 2004               9.85 -0.20263425\n23 2008               9.69 -1.62436548\n24 2012 9.6300000000000008 -0.61919505\n25 2016               9.81  1.86915888\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(mens_100m_change1, aes(Year, Change))+\n  geom_col()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 1 rows containing missing values (`position_stack()`).\n```\n:::\n\n::: {.cell-output-display}\n![](mens_100m_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmens_100m_change2 <- read_xlsx(\"/Users/rochellerafn/RStudio_Files/mens_100m_min.xlsx\", sheet = 3, col_names = c(\"Year\", \"minTime\", \"Change\", \"Change2\"))\n\nmens_100m_change2 <- mens_100m_change2 %>%\n  filter(!is.na(Change)) %>%\n  transform(Change = as.numeric(Change), Change2 = as.numeric(Change2))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in eval(substitute(list(...)), `_data`, parent.frame()): NAs introduced\nby coercion\n\nWarning in eval(substitute(list(...)), `_data`, parent.frame()): NAs introduced\nby coercion\n```\n:::\n\n```{.r .cell-code}\nmens_100m_change2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Year            minTime      Change    Change2\n1  Year            minTime          NA         NA\n2  1912               10.6  0.00000000  0.0000000\n3  1920               10.8  1.88679245  1.8867925\n4  1924               10.6 -1.85185185  0.0000000\n5  1928               10.6  0.00000000  0.0000000\n6  1932              10.38 -2.07547170 -2.0754717\n7  1936 10.199999999999999 -1.73410405 -3.7735849\n8  1948               10.3  0.98039216 -2.8301887\n9  1952              10.65  3.39805825  0.4716981\n10 1956              10.52 -1.22065728 -0.7547170\n11 1960 10.199999999999999 -3.04182510 -3.7735849\n12 1964                9.9 -2.94117647 -6.6037736\n13 1968                9.9  0.00000000 -6.6037736\n14 1972              10.07  1.71717172 -5.0000000\n15 1976              10.06 -0.09930487 -5.0943396\n16 1980              10.11  0.49701789 -4.6226415\n17 1984               9.99 -1.18694362 -5.7547170\n18 1988 9.7899999999999991 -2.00200200 -7.6415094\n19 1992 9.9600000000000009  1.73646578 -6.0377358\n20 1996               9.84 -1.20481928 -7.1698113\n21 2000 9.8699999999999992  0.30487805 -6.8867925\n22 2004               9.85 -0.20263425 -7.0754717\n23 2008               9.69 -1.62436548 -8.5849057\n24 2012 9.6300000000000008 -0.61919505 -9.1509434\n25 2016               9.81  1.86915888 -7.4528302\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(mens_100m_change2, aes(Year, Change2))+\n  geom_col()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 1 rows containing missing values (`position_stack()`).\n```\n:::\n\n::: {.cell-output-display}\n![](mens_100m_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmens_100m_nations <- mens_100m_all %>%\n  select(Year, Nation, Time, Rank) %>%\n  arrange(Year)\n\nhead(mens_100m_nations)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Year        Nation Time Rank\n1 1912        Sweden 12.8    1\n2 1912        Sweden 11.5    1\n3 1912 United States 11.2    1\n4 1912 Great Britain 11.4    1\n5 1912 Great Britain 11.2    1\n6 1912       Germany 11.5    1\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(countrycode)\n\ncountry_code <- countrycode(mens_100m_nations$Nation, origin = 'country.name', destination = 'iso3c')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in countrycode_convert(sourcevar = sourcevar, origin = origin, destination = dest, : Some values were not matched unambiguously: Australasia, British West Indies, Czechoslovakia, East Germany, Malaya, Netherlands Antilles, South Yemen, Unified Team, Virgin Islands, Yugoslavia\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmens_100m_ncodes <- mens_100m_nations %>%\n  add_column('Country Code' = country_code)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmens_100m_ncodes %>%\n  group_by(Nation)%>%\n  filter(is.na(`Country Code`))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 78 × 5\n# Groups:   Nation [10]\n    Year Nation          Time Rank  `Country Code`\n   <int> <chr>          <dbl> <chr> <chr>         \n 1  1912 Australasia     11   1     <NA>          \n 2  1924 Czechoslovakia  11.6 5     <NA>          \n 3  1924 Czechoslovakia  11.3 3     <NA>          \n 4  1928 Czechoslovakia  11.3 3     <NA>          \n 5  1932 Czechoslovakia  11.2 3     <NA>          \n 6  1932 Czechoslovakia  11.1 4     <NA>          \n 7  1936 Yugoslavia      11.5 5     <NA>          \n 8  1952 Czechoslovakia  11.2 4     <NA>          \n 9  1952 Czechoslovakia  11.2 4     <NA>          \n10  1952 Czechoslovakia  11.3 4     <NA>          \n# ℹ 68 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmens_100m_ncodes$'Country Code'[mens_100m_ncodes$Nation == \"East Germany\"] <- \"DEU\"\nmens_100m_ncodes$'Country Code'[mens_100m_ncodes$Nation == \"Czechoslovakia\"] <- \"CZE\"\nmens_100m_ncodes$'Country Code'[mens_100m_ncodes$Nation == \"Virgin Islands\"] <- \"VBG\"\nmens_100m_ncodes$'Country Code'[mens_100m_ncodes$Nation == \"Netherlands Antilles\"] <- \"NLD\"\nmens_100m_ncodes$'Country Code'[mens_100m_ncodes$Nation == \"Malaya\"] <- \"MYS\"\nmens_100m_ncodes$'Country Code'[mens_100m_ncodes$Nation == \"British West Indies\"] <- \"JAM\"\nmens_100m_ncodes$'Country Code'[mens_100m_ncodes$Nation == \"Australasia\"] <- \"AUS\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggmap)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nℹ Google's Terms of Service: <https://mapsplatform.google.com>\nℹ Please cite ggmap if you use it! Use `citation(\"ggmap\")` for details.\n```\n:::\n\n```{.r .cell-code}\nmens_100m_nation_medals <- mens_100m_ncodes %>%\n  filter(Rank %in% c(\"Gold\", \"Silver\", \"Bronze\"))\n\nmens_100m_nation_medals$Rank <- factor(mens_100m_nation_medals$Rank, levels=c(\"Gold\", \"Silver\", \"Bronze\"))\n\nmens_100m_nation_medals <- cbind(mens_100m_nation_medals, ggmap::geocode(as.character(mens_100m_nation_medals[, \"Nation\"]), force = FALSE))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nℹ <https://maps.googleapis.com/maps/api/geocode/json?address=United+States&key=xxx>\nℹ <https://maps.googleapis.com/maps/api/geocode/json?address=Great+Britain&key=xxx>\nℹ <https://maps.googleapis.com/maps/api/geocode/json?address=New+Zealand&key=xxx>\nℹ <https://maps.googleapis.com/maps/api/geocode/json?address=Canada&key=xxx>\nℹ <https://maps.googleapis.com/maps/api/geocode/json?address=Germany&key=xxx>\nℹ <https://maps.googleapis.com/maps/api/geocode/json?address=Netherlands&key=xxx>\nℹ <https://maps.googleapis.com/maps/api/geocode/json?address=Panama&key=xxx>\nℹ <https://maps.googleapis.com/maps/api/geocode/json?address=Jamaica&key=xxx>\nℹ <https://maps.googleapis.com/maps/api/geocode/json?address=Australia&key=xxx>\nℹ <https://maps.googleapis.com/maps/api/geocode/json?address=United+Team+of+Germany&key=xxx>\nℹ <https://maps.googleapis.com/maps/api/geocode/json?address=Cuba&key=xxx>\nℹ <https://maps.googleapis.com/maps/api/geocode/json?address=Soviet+Union&key=xxx>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Geocoding \"Soviet Union\" failed with error:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nℹ <https://maps.googleapis.com/maps/api/geocode/json?address=Trinidad+and+Tobago&key=xxx>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Geocoding \"Soviet Union\" failed with error:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nℹ <https://maps.googleapis.com/maps/api/geocode/json?address=Bulgaria&key=xxx>\nℹ <https://maps.googleapis.com/maps/api/geocode/json?address=Namibia&key=xxx>\nℹ <https://maps.googleapis.com/maps/api/geocode/json?address=Barbados&key=xxx>\nℹ <https://maps.googleapis.com/maps/api/geocode/json?address=Portugal&key=xxx>\n```\n:::\n\n```{.r .cell-code}\nmens_100m_nation_medals\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Year                 Nation  Time   Rank Country Code         lon        lat\n1  1912          United States 10.80   Gold          USA  -95.712891  37.090240\n2  1912          United States 10.90 Silver          USA  -95.712891  37.090240\n3  1912          United States 10.90 Bronze          USA  -95.712891  37.090240\n4  1920          United States 10.80   Gold          USA  -95.712891  37.090240\n5  1920          United States 10.90 Silver          USA  -95.712891  37.090240\n6  1920          Great Britain 10.90 Bronze          GBR   -3.435973  55.378051\n7  1924          Great Britain 10.60   Gold          GBR   -3.435973  55.378051\n8  1924          United States 10.70 Silver          USA  -95.712891  37.090240\n9  1924            New Zealand 10.80 Bronze          NZL  174.885971 -40.900557\n10 1928                 Canada 10.80   Gold          CAN -106.346771  56.130366\n11 1928          Great Britain 10.90 Silver          GBR   -3.435973  55.378051\n12 1928                Germany 10.90 Bronze          DEU   10.451526  51.165691\n13 1932          United States 10.38   Gold          USA  -95.712891  37.090240\n14 1932          United States 10.38 Silver          USA  -95.712891  37.090240\n15 1932                Germany 10.50 Bronze          DEU   10.451526  51.165691\n16 1936          United States 10.30   Gold          USA  -95.712891  37.090240\n17 1936          United States 10.40 Silver          USA  -95.712891  37.090240\n18 1936            Netherlands 10.50 Bronze          NLD    5.291266  52.132633\n19 1948          United States 10.30   Gold          USA  -95.712891  37.090240\n20 1948          United States 10.40 Silver          USA  -95.712891  37.090240\n21 1948                 Panama 10.60 Bronze          PAN  -80.782127   8.537981\n22 1952          United States 10.79   Gold          USA  -95.712891  37.090240\n23 1952                Jamaica 10.80 Silver          JAM  -77.297508  18.109581\n24 1952          Great Britain 10.83 Bronze          GBR   -3.435973  55.378051\n25 1956          United States 10.62   Gold          USA  -95.712891  37.090240\n26 1956          United States 10.77 Silver          USA  -95.712891  37.090240\n27 1956              Australia 10.77 Bronze          AUS  133.775136 -25.274398\n28 1960 United Team of Germany 10.20   Gold          DEU   10.451526  51.165691\n29 1960          United States 10.20 Silver          USA  -95.712891  37.090240\n30 1960          Great Britain 10.30 Bronze          GBR   -3.435973  55.378051\n31 1964          United States 10.00   Gold          USA  -95.712891  37.090240\n32 1964                   Cuba 10.20 Silver          CUB  -77.781167  21.521757\n33 1964                 Canada 10.20 Bronze          CAN -106.346771  56.130366\n34 1968          United States  9.90   Gold          USA  -95.712891  37.090240\n35 1968                Jamaica 10.00 Silver          JAM  -77.297508  18.109581\n36 1968          United States 10.00 Bronze          USA  -95.712891  37.090240\n37 1972           Soviet Union 10.14   Gold          RUS          NA         NA\n38 1972          United States 10.24 Silver          USA  -95.712891  37.090240\n39 1972                Jamaica 10.33 Bronze          JAM  -77.297508  18.109581\n40 1976    Trinidad and Tobago 10.06   Gold          TTO  -61.222503  10.691803\n41 1976                Jamaica 10.08 Silver          JAM  -77.297508  18.109581\n42 1976           Soviet Union 10.14 Bronze          RUS          NA         NA\n43 1980          Great Britain 10.25   Gold          GBR   -3.435973  55.378051\n44 1980                   Cuba 10.25 Silver          CUB  -77.781167  21.521757\n45 1980               Bulgaria 10.39 Bronze          BGR   25.485830  42.733883\n46 1984          United States  9.99   Gold          USA  -95.712891  37.090240\n47 1984          United States 10.19 Silver          USA  -95.712891  37.090240\n48 1984                 Canada 10.22 Bronze          CAN -106.346771  56.130366\n49 1988          United States  9.92   Gold          USA  -95.712891  37.090240\n50 1988          Great Britain  9.97 Silver          GBR   -3.435973  55.378051\n51 1988          United States  9.99 Bronze          USA  -95.712891  37.090240\n52 1992          Great Britain  9.96   Gold          GBR   -3.435973  55.378051\n53 1992                Namibia 10.02 Silver          NAM   18.490410 -22.957640\n54 1992          United States 10.04 Bronze          USA  -95.712891  37.090240\n55 1996                 Canada  9.84   Gold          CAN -106.346771  56.130366\n56 1996                Namibia  9.89 Silver          NAM   18.490410 -22.957640\n57 1996    Trinidad and Tobago  9.90 Bronze          TTO  -61.222503  10.691803\n58 2000          United States  9.87   Gold          USA  -95.712891  37.090240\n59 2000    Trinidad and Tobago  9.99 Silver          TTO  -61.222503  10.691803\n60 2000               Barbados 10.04 Bronze          BRB  -59.543198  13.193887\n61 2004          United States  9.85   Gold          USA  -95.712891  37.090240\n62 2004               Portugal  9.86 Silver          PRT   -8.224454  39.399872\n63 2004          United States  9.87 Bronze          USA  -95.712891  37.090240\n64 2008                Jamaica  9.69   Gold          JAM  -77.297508  18.109581\n65 2008    Trinidad and Tobago  9.89 Silver          TTO  -61.222503  10.691803\n66 2008          United States  9.91 Bronze          USA  -95.712891  37.090240\n67 2012                Jamaica  9.63   Gold          JAM  -77.297508  18.109581\n68 2012                Jamaica  9.75 Silver          JAM  -77.297508  18.109581\n69 2012          United States  9.79 Bronze          USA  -95.712891  37.090240\n70 2016                Jamaica  9.81   Gold          JAM  -77.297508  18.109581\n71 2016          United States  9.89 Silver          USA  -95.712891  37.090240\n72 2016                 Canada  9.91 Bronze          CAN -106.346771  56.130366\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# load library\nlibrary(rworldmap)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: sp\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n### Welcome to rworldmap ###\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nFor a short introduction type : \t vignette('rworldmap')\n```\n:::\n\n```{.r .cell-code}\n# get map\nworldmap <- getMap(resolution = \"coarse\")\n# plot world map\nplot(worldmap, col = \"white\", \n     fill = T, border = \"darkgray\",\n     xlim = c(-180, 180), ylim = c(-90, 90),\n     bg = \"aliceblue\",\n     asp = 1, wrap=c(-180,180))\n```\n\n::: {.cell-output-display}\n![](mens_100m_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncountry_medal_map <- joinCountryData2Map(mens_100m_nation_medals, \n                                   joinCode = \"ISO3\",\n                                   nameJoinColumn = \"Country Code\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n72 codes from your data successfully matched countries in the map\n0 codes from your data failed to match with a country code in the map\n227 codes from the map weren't represented in your data\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmap1 <- mapCountryData(country_medal_map, nameColumnToPlot=\"Rank\", \n                       catMethod = \"categorical\", \n                       missingCountryCol = 'white',\n                       oceanCol= 'lightblue',\n                       colourPalette = c(\"#EBD739\", \"#B5BCC2\", \"#FFB48C\"), \n                       mapTitle = \"Country Medals\", borderCol = \"white\")\n```\n\n::: {.cell-output-display}\n![](mens_100m_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# mapBubbles(country_medal_map, \n#    nameColumnToPlot=\"Rank\",\n#    nameX = \"lon\", nameY = \"lat\",\n#    colourPalette= c(\"#EBD739\", \"#B5BCC2\", \"#FFB48C\"),\n#    nameZColour=\"Rank\",\n#    numCats = 3,\n#    catMethod = \"categorical\",\n#    oceanCol= 'lightblue', \n#    landCol= 'white')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rnaturalearth)\n\nworld <- ne_countries(scale = \"medium\", returnclass = \"sf\") \n\nnewdata2 <- rename(mens_100m_nation_medals, iso_a3 = 'Country Code')\n\nworld2 <- merge(world, newdata2, all = TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# library(ggiraph)\n\n# map2 <- ggplot(world2) +\n#  geom_sf_interactive(\n#    aes(fill = Rank) + \n#  ggtitle(\"Country Medals\") +\n#  scale_fill_manual(breaks = c(\"Gold\", \"Silver\", \"Bronze\"), \n#                      values=c(\"#EBD739\", \"#B5BCC2\", \"#FFB48C\"),\n#                      labels=c(\"Gold\", \"Silver\", \"Bronze\")) +\n#  guides(fill=guide_legend(title=NULL)))\n\n# map2 <- girafe(code, \n#                    ggobj = map2,\n#                    options = list(opts_tooltip(use_fill = TRUE),\n#                                   opts_zoom(min = 1, max = 5),\n#                                   opts_toolbar(saveaspng = FALSE))) #removes default \"save as PNG' option on widget\n```\n:::\n",
    "supporting": [
      "mens_100m_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}